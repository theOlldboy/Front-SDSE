{"version":3,"sources":["utils/Masks.js","services/auth.js","services/api.js","components/Footer/footer.js","pages/Login.js","pages/Inicio.js","utils/toasts.js","pages/Redef-senha.js","pages/Recu-senha.js","pages/Primeiro-acesso.js","pages/Primeira-senha.js","components/Paginacao.js","components/TabelaDoacoes.js","pages/Doacoes.js","components/Mapa.js","components/TabelaDoacoesDisponiveis.js","pages/DoacoesDisponiveis.js","components/TabelaSolicitacoes.js","routes.js","pages/Solicitacao.js","pages/EdicaoDados.js","App.js","reportWebVitals.js","index.js"],"names":["cnpjMask","cfdfMask","cpfMask","telefoneMask","USER_KEY","getToken","userStr","localStorage","getItem","JSON","parse","token","getUser","setUser","user","userLocal","setItem","stringify","login","payload","currentUser","Object","assign","access_token","empresa","lat","lng","logout","removeItem","api","axios","create","baseURL","process","interceptors","request","use","a","config","headers","Authorization","response","error","status","Promise","reject","Footer","className","Login","from","this","props","path","to","Container","align","Badge","Card","CardHeader","CardBody","initialValues","cnpj","senha","validationSchema","Yup","shape","required","min","max","onSubmit","values","setSubmitting","post","then","data","history","push","catch","alert","message","console","log","Row","Col","xs","name","label","type","tag","MaskedInput","mask","component","ReactstrapInput","Button","CardLink","Component","Inicio","size","block","onClick","erro","msg","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","sucesso","success","info","configure","RedefSenha","consenha","match","params","RecuSenha","email","PrimeiroAcesso","PrimeiraSenha","oneOf","Paginacao","hidden","pagesCount","currentPage","handlePageClick","handlePreviousClick","handleNextClick","Pagination","PaginationItem","disabled","PaginationLink","previous","href","Array","map","page","i","active","e","next","TabelaDoacoes","state","selected","volume","tipo_solo","tipo","id","status_solo","dropdownOpenTipo","dropdownOpenStatus","showModalEdit","index","preventDefault","setState","toggleEdit","toggleTipo","toggleStatus","changeVolume","target","value","changeTipo","textContent","changeStatus","updateSolo","tipoSoloId","statusSoloId","Api","put","solos","filter","p","concat","change","Table","striped","bordered","dark","hover","slice","solo","Fragment","Math","round","length","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","FormGroup","form","Label","for","Input","onChange","ButtonDropdown","DropdownToggle","caret","DropdownMenu","tipos","DropdownItem","ModalFooter","color","Doacao","doacoes","new","latitude","longitude","dropdownOpen","dropdownOpenNew","labelTipo","showModal","modalAdd","selectedFile","soloId","hiddenTabela","toggleTipoNew","changeTipoNew","changeVolumeNew","changeLatLong","long","cleanFilters","buscarDoacao","tipoId","saveSolo","saveFile","getLoc","get","tipoSolos","formData","FormData","append","method","url","navigator","permissions","query","result","startPos","geoSuccess","coords","geolocation","getCurrentPosition","CardTitle","InputGroup","placeholder","InputGroupAddon","addonType","outline","setDoacoes","bind","files","GoogleApiWrapper","apiKey","MAP_API","selectedPlace","place","window","location","google","zoom","initialCenter","TabelaSolicitacoes","empresa_user","nome","telefone","representante","file","places","interesse","ListGroup","ListGroupItem","download","class","DoacoesDisponiveis","TabelaDoacoesDisponiveis","routes","isAuth","Doacoes","solicitacoes","buscarSolicitacao","setSolicitacoes","cfdf","cargo_representante","cpf_representante","PrivateRoute","rest","render","pathname","App","getRoutes","prop","key","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.686473b9.chunk.js","sourcesContent":["\r\nexport function cnpjMask (){\r\n    return [\r\n    /[0-9]/,\r\n    /\\d/,\r\n    \".\",\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    \".\",\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    \"/\",\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    \"-\",\r\n    /\\d/,\r\n    /\\d/\r\n  ];\r\n}\r\nexport function cfdfMask (){\r\n  return [\r\n  /[0-9]/,\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  \"-\",\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n];\r\n} \r\nexport function cpfMask (){\r\n  return [\r\n  /[0-9]/,\r\n  /\\d/,\r\n  /\\d/,\r\n  \".\",\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  \".\",\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  \"-\",\r\n  /\\d/,\r\n  /\\d/\r\n];\r\n} \r\nexport function telefoneMask (){\r\n  return [\r\n  \"(\",\r\n  /[0-9]/,\r\n  /\\d/,\r\n  \")\",\r\n  \" \",\r\n  /\\d/,\r\n  \" \",\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  \"-\",\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/\r\n];\r\n} ","\r\nexport const USER_KEY = \"@user-sdse\";\r\nexport const isAuthenticated = () => localStorage.getItem(USER_KEY) !== null;\r\n\r\nexport const getToken = () => {\r\n    const userStr = localStorage.getItem(USER_KEY);\r\n    \r\n    if (!userStr) {\r\n        return null;\r\n    }     \r\n\r\n    const currentUser = JSON.parse(userStr);\r\n\r\n    return currentUser.token;\r\n};\r\n\r\nexport const getUser = () => {\r\n    const userStr = localStorage.getItem(USER_KEY);\r\n    if (!userStr) {\r\n        return null;\r\n    }\r\n\r\n    return JSON.parse(userStr);\r\n};\r\n\r\nexport const setUser = (user) => {\r\n    const userStr = localStorage.getItem(USER_KEY);\r\n    if (!userStr) {\r\n        return null;\r\n    }\r\n\r\n    let userLocal = JSON.parse(userStr);\r\n    userLocal.user = user\r\n\r\n    localStorage.setItem(USER_KEY, JSON.stringify(userLocal));\r\n};\r\n\r\nexport const login = payload => {\r\n    const currentUser = Object.assign({}, { token: payload.access_token, user:  payload.empresa });\r\n    localStorage.setItem(USER_KEY, JSON.stringify(currentUser));\r\n    localStorage.setItem('@user-loc',JSON.stringify({lat : 0, lng : 0}));\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(USER_KEY);\r\n    localStorage.removeItem('@user-loc');\r\n}\r\n;","import axios from \"axios\";\r\nimport { getToken, logout} from \"./auth\";\r\n\r\nconst api = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n    const token = getToken();\r\n    \r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n});\r\n\r\napi.interceptors.response.use(null, (error) => {\r\n    \r\n    if (error.status === 401) {\r\n        logout();\r\n    }\r\n\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default api;","import React from \"react\";\r\nimport \"./footer.css\";\r\n\r\nconst Footer = () => (\r\n  <div className=\"footer\">\r\n    <p>Secretaria de Obras do Distrito Federal <div>CopyRigth @ 2020</div></p>\r\n  </div>\r\n);\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport '../styles.css';\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { ReactstrapInput } from \"reactstrap-formik\";\r\nimport {Button, Container, Row, Col, Card, CardBody, CardHeader, Badge, CardLink} from 'reactstrap';\r\nimport * as Yup from 'yup';\r\nimport MaskedInput from \"react-text-mask\";\r\nimport { cnpjMask } from \"../utils/Masks\";\r\nimport { getUser, login } from '../services/auth';\r\nimport api from '../services/api';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Footer from '../components/Footer/footer';\r\n\r\n\r\n\r\n  class Login extends Component {\r\n    render() {  \r\n    if(getUser() !== null){\r\n        return (<Redirect from={this.props.path} to='/inicio' />);\r\n    }\r\n    return (\r\n    <Container className=\"main\">\r\n      <h1 align=\"center\" className='mb-5'><Badge>SDSE</Badge></h1>\r\n        <Card>\r\n            <CardHeader>Seja bem vindo!</CardHeader>\r\n            <CardBody>\r\n        <Formik\r\n              initialValues={{cnpj: '', senha: ''}}\r\n              validationSchema={Yup.object().shape({\r\n                cnpj: Yup.string().required('Campo Obrigatório!'),\r\n                senha: Yup.string().required('Campo Obrigatório!').min(6, 'A senha deve ter obrigatoriamente 6-8 caracteres!').max(8, 'Senha deve ter obrigatoriamente 6-8 caracteres!'),\r\n              })}\r\n              onSubmit={async(values, { setSubmitting }) => {          \r\n                const cnpj = values.cnpj;\r\n                const senha = values.senha;\r\n          \r\n                await api.post('login/', {cnpj, senha}).then(response => {\r\n                  login(response.data);\r\n                  this.props.history.push(\"/inicio\");\r\n                })\r\n                  .catch(error => {\r\n                    alert(error.response.data.message);\r\n                    console.log(values);\r\n                  });\r\n              } }\r\n              >\r\n              <Form>\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                  <Field name=\"cnpj\"  label=\"CNPJ\" type=\"text\" \r\n                    tag={MaskedInput} mask={cnpjMask} component={ReactstrapInput} />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs=\"12\">\r\n                  <Field name=\"senha\"  label=\"Senha\" type=\"password\" component={ReactstrapInput} />\r\n                  </Col>\r\n                </Row>\r\n\r\n              <Row xs=\"2\">\r\n                <Col><Button type=\"submit\">Acessar</Button></Col>\r\n                <Col className=\"text-sm\"><CardLink><Link to=\"/recupera_senha\">Esqueceu sua senha?</Link></CardLink></Col>\r\n                <Col></Col>\r\n                <Col className=\"text-sm\"><CardLink><Link to=\"/primeiro_acesso\">Primeiro Acesso?</Link></CardLink></Col>\r\n              </Row>\r\n\r\n              </Form>\r\n              </Formik>\r\n            </CardBody>\r\n        </Card>\r\n      <Footer />\r\n    </Container>\r\n  )\r\n    }}\r\n    export default Login;\r\n","import React, { Component } from 'react';\r\nimport '../styles.css';\r\nimport {Button, Container, Card, CardBody, CardHeader, Badge} from 'reactstrap';\r\nimport Footer from '../components/Footer/footer';\r\nimport {logout} from '../services/auth';\r\n\r\nclass Inicio extends Component {\r\n    render (){\r\n    return(\r\n        <Container className=\"main\">\r\n        <h1 align=\"center\" className='mb-5'><Badge>SDSE</Badge></h1>\r\n        <Container>\r\n        <Card>\r\n            <CardHeader>Selecione a opção que desejar!</CardHeader>\r\n\r\n            <CardBody>\r\n                <Button size=\"lg\" block onClick={() => this.props.history.push(\"/doacoes\")}>Doar Solo</Button>\r\n                <Button size=\"lg\" block className='bg-primary' onClick={() => this.props.history.push(\"/doacoes-disponiveis\")}>Ver doações disponíveis</Button>\r\n                <Button size=\"lg\" block onClick={() => this.props.history.push(\"/solicitacao\")}>Solicitar Doação</Button>\r\n                <Button size=\"lg\" block onClick={() => this.props.history.push(\"/edicao-dados\")}>Editar Dados</Button>\r\n                <Button size=\"lg\" block onClick={() => {logout(); this.props.history.push(\"/login\")}}>Sair</Button>\r\n            </CardBody>\r\n\r\n        </Card>\r\n        </Container>\r\n        <Footer />\r\n        </Container>\r\n    );\r\n}} export default Inicio;","import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure()\r\n\r\nexport function erro(msg) {\r\n    toast.error(msg,{\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true\r\n    })\r\n  }\r\n  \r\n  export function sucesso(msg) {\r\n    toast.success(msg,{\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true\r\n    })\r\n  }\r\n\r\n  export function info(msg) {\r\n    toast.info(msg,{\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true\r\n    })\r\n  }","import React, { Component } from 'react';\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport { ReactstrapInput } from \"reactstrap-formik\";\r\nimport { Container, Badge, Card, CardBody, CardHeader, Button } from \"reactstrap\";\r\nimport \"../styles.css\";\r\nimport Footer from '../components/Footer/footer';\r\nimport api from '../services/api';\r\nimport { getUser } from '../services/auth';\r\nimport { Redirect } from 'react-router';\r\nimport * as toast from '../utils/toasts'\r\n\r\n    class RedefSenha extends Component {\r\n        render (){\r\n            if(getUser() !== null){\r\n                return (<Redirect from={this.props.path} to='/inicio' />);\r\n            }\r\n        return (\r\n            <Container className=\"main\">\r\n                <h1 align=\"center\" className='mb-5'><Badge>SDSE</Badge></h1>\r\n                <Card>\r\n                <CardHeader>Defina uma nova senha para sua conta!</CardHeader>\r\n                <CardBody>\r\n            <Formik\r\n                initialValues={{ senha: '', consenha: '', token: '' }}\r\n                validationSchema={Yup.object().shape({\r\n                    senha: Yup.string().required('Campo Obrigatório!').min(6, 'A senha deve ter obrigatoriamente 6-8 caracteres!').max(8, 'Senha deve ter obrigatoriamente 6-8 caracteres!'),\r\n                    consenha: Yup.string().required('Campo Obrigatório!').min(6, 'A senha deve ter obrigatoriamente 6-8 caracteres!').max(8, 'Senha deve ter obrigatoriamente 6-8 caracteres!'),                })}\r\n                onSubmit={async(values, { setSubmitting }) => {\r\n                    const senha = values.senha;\r\n                    const token = this.props.match.params.token;\r\n\r\n                    await api.post(\"/password-reset\", {token, senha}).then( response => {\r\n                        toast.sucesso(\"Senha redefinida com sucesso! Realize o Login!\")\r\n                        this.props.history.push('/login');\r\n                        setSubmitting(false);\r\n                    })\r\n                    .catch(error => {\r\n                        alert(error.response.data.message);\r\n                        console.log(error);\r\n                    });\r\n                } }\r\n            >\r\n                <Form>\r\n                    <Field name=\"senha\"  label=\"Senha\" type=\"password\" component={ReactstrapInput} />\r\n                    \r\n                    <Field name=\"consenha\" label=\"Confirme a Senha\" type=\"password\" component={ReactstrapInput} />\r\n\r\n                    <Button type=\"submit\">Salvar</Button>\r\n                </Form>\r\n            </Formik>\r\n            </CardBody>\r\n            </Card>\r\n            <Footer />\r\n            </Container>\r\n        )\r\n}}\r\nexport default RedefSenha;","import React, { Component } from 'react';\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport { ReactstrapInput } from \"reactstrap-formik\";\r\nimport MaskedInput from \"react-text-mask\";\r\nimport { cnpjMask } from \"../utils/Masks\";\r\nimport { Container, Badge, Card, CardBody, CardHeader, Button } from \"reactstrap\";\r\nimport \"../styles.css\";\r\nimport Footer from '../components/Footer/footer';\r\nimport api from '../services/api'\r\nimport { getUser } from '../services/auth';\r\nimport { Redirect } from 'react-router';\r\nimport * as toast from '../utils/toasts'\r\n\r\n\r\n    class RecuSenha extends Component {\r\n        render() {\r\n            if(getUser() !== null){\r\n                return (<Redirect from={this.props.path} to='/inicio' />);\r\n            }\r\n        return (\r\n            <Container className=\"main\">\r\n                <h1 align=\"center\" className='mb-5'><Badge>SDSE</Badge></h1>\r\n                <Card>\r\n                <CardHeader>Preencha os campos abaixo e enviaremos um link em seu e-mail!</CardHeader>\r\n                <CardBody>\r\n            <Formik\r\n                initialValues={{ cnpj: '', email: '' }}\r\n                validationSchema={Yup.object().shape({\r\n                    cnpj: Yup.string().required('Campo Obrigatório!'),\r\n                    email: Yup.string().required('Campo Obrigatório!').email('E-mail inválido!'),\r\n                })}\r\n                onSubmit={async(values, { setSubmitting }) => {\r\n                    const cnpj = values.cnpj;\r\n                    const email = values.email;\r\n\r\n                    await api.post(\"/password-recovery\", {cnpj ,email}).then( response => {\r\n                        toast.sucesso(\"Você receberá em breve um email no endereço fornecido para criar uma nova senha para sua conta!\")\r\n                        this.props.history.push('/login');\r\n                        setSubmitting(false); \r\n                    })\r\n                    .catch(error => {\r\n                        alert(error.response.data.message);\r\n                        console.log(error);\r\n                      }); \r\n                } }\r\n            >\r\n                <Form>\r\n                    <Field name=\"cnpj\"  label=\"CNPJ\" type=\"text\" \r\n                    tag={MaskedInput} mask={cnpjMask} component={ReactstrapInput} />\r\n\r\n                    <Field name=\"email\" label=\"E-mail\" type=\"email\" component={ReactstrapInput} />\r\n\r\n                    <Button type=\"submit\">Enviar</Button>\r\n                </Form>\r\n            </Formik>\r\n            </CardBody>\r\n            </Card>\r\n            <Footer />\r\n            </Container>\r\n)}\r\n};export default RecuSenha;","import React, { Component } from 'react';\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport { ReactstrapInput } from \"reactstrap-formik\";\r\nimport MaskedInput from \"react-text-mask\";\r\nimport { cnpjMask } from \"../utils/Masks\";\r\nimport { Container, Badge, Card, CardBody, CardHeader, Button } from \"reactstrap\";\r\nimport \"../styles.css\";\r\nimport Footer from '../components/Footer/footer';\r\nimport api from '../services/api'\r\nimport { getUser } from '../services/auth';\r\nimport { Redirect } from 'react-router';\r\nimport * as toast from '../utils/toasts'\r\n\r\n    class PrimeiroAcesso extends Component {\r\n        render(){\r\n            if(getUser() !== null){\r\n                return (<Redirect from={this.props.path} to='/inicio' />);\r\n            }\r\n        return (\r\n            <Container className=\"main\">\r\n                <h1 align=\"center\" className='mb-5'><Badge>SDSE</Badge></h1>\r\n                <Card>\r\n                <CardHeader>Preencha os campos abaixo e enviaremos um link em seu e-mail!</CardHeader>\r\n                <CardBody>\r\n            <Formik\r\n                initialValues={{ cnpj: '', email: '' }}\r\n                validationSchema={Yup.object().shape({\r\n                    cnpj: Yup.string().required('Campo Obrigatório!'),\r\n                    email: Yup.string().required('Campo Obrigatório!').email('E-mail inválido!'),\r\n                })}\r\n                onSubmit={async(values, { setSubmitting }) => {\r\n                    const cnpj = values.cnpj;\r\n                    const email = values.email;\r\n\r\n                    await api.post(\"/password-firstaccess\", {cnpj ,email}).then( response => {\r\n                        toast.sucesso(\"Você receberá em breve um email no endereço fornecido para criar uma senha para sua conta!\")\r\n                        this.props.history.push('/login');\r\n                        setSubmitting(false); \r\n                    })\r\n                    .catch(error => {\r\n                        alert(error.response.data.message);\r\n                        console.log(error);\r\n                      });  \r\n                } }\r\n            >\r\n                <Form>\r\n                    <Field name=\"cnpj\"  label=\"CNPJ\" type=\"text\" \r\n                    tag={MaskedInput} mask={cnpjMask} component={ReactstrapInput} />\r\n\r\n                    <Field name=\"email\" label=\"E-mail\" type=\"email\" component={ReactstrapInput} />\r\n\r\n                    <Button type=\"submit\">Enviar</Button>\r\n                </Form>\r\n            </Formik>\r\n            </CardBody>\r\n            </Card>\r\n            <Footer />\r\n            </Container>\r\n        )}};\r\nexport default PrimeiroAcesso;","import React, { Component } from 'react';\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport { ReactstrapInput } from \"reactstrap-formik\";\r\nimport { Container, Badge, Card, CardBody, CardHeader, Button } from \"reactstrap\";\r\nimport \"../styles.css\";\r\nimport Footer from '../components/Footer/footer';\r\nimport { getUser } from '../services/auth';\r\nimport { Redirect } from 'react-router';\r\nimport api from '../services/api'\r\nimport * as toast from '../utils/toasts'\r\n\r\n    class PrimeiraSenha extends Component {\r\n        render(){\r\n            if(getUser() !== null){\r\n                return (<Redirect from={this.props.path} to='/inicio' />);\r\n            }\r\n        return (\r\n            <Container className=\"main\">\r\n                <h1 align=\"center\" className='mb-5'><Badge>SDSE</Badge></h1>\r\n                <Card>\r\n                <CardHeader>Defina uma nova senha em seu Primeiro Acesso!</CardHeader>\r\n                <CardBody>\r\n            <Formik\r\n                initialValues={{ senha: '', consenha: '' }}\r\n                validationSchema={Yup.object().shape({\r\n                    senha: Yup.string().required('Campo Obrigatório!').min(6, 'A senha deve ter obrigatoriamente 6-8 caracteres!').max(8, 'Senha deve ter obrigatoriamente 6-8 caracteres!'),\r\n                    consenha: Yup.string().required('Campo Obrigatório!').oneOf([Yup.ref('senha'), null], 'As senhas devem ser iguais!'),                })}\r\n                onSubmit={async(values, { setSubmitting }) => {\r\n                    const senha = values.senha;\r\n                    const consenha = values.consenha;\r\n                    const token = this.props.match.params.token;\r\n                    if (senha === consenha){\r\n                        await api.post(\"/password-reset\", {token, senha}).then( response => {\r\n                            toast.sucesso(\"Senha criada com sucesso, realize o login!\")\r\n                            this.props.history.push('/login');\r\n                            setSubmitting(false);\r\n                        })\r\n                        .catch(error => {\r\n                            alert(error.response.data.message);\r\n                            console.log(error);\r\n                        }); \r\n                    }else{\r\n                        toast.erro(\"As senhas informadas não conferem!\")\r\n                    }\r\n                } }\r\n            >\r\n                <Form>\r\n                    <Field name=\"senha\"  label=\"Senha\" type=\"password\" component={ReactstrapInput} />\r\n                    \r\n                    <Field name=\"consenha\" label=\"Confirme a Senha\" type=\"password\" component={ReactstrapInput} />\r\n\r\n                    <Button type=\"submit\">Salvar</Button>\r\n                </Form>\r\n            </Formik>\r\n            </CardBody>\r\n            </Card>\r\n            <Footer />\r\n            </Container>\r\n    )\r\n    }}\r\n    export default PrimeiraSenha;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap'\r\n\r\nconst Paginacao = ({\r\n    hidden,\r\n    pagesCount,\r\n    currentPage,\r\n    handlePageClick,\r\n    handlePreviousClick,\r\n    handleNextClick\r\n   }) => {\r\n\r\n    return (\r\n      <Pagination hidden={hidden}>\r\n        <PaginationItem disabled={currentPage <= 0}>\r\n          <PaginationLink onClick={handlePreviousClick} previous href=\"#\" />\r\n        </PaginationItem>\r\n        {[...Array(pagesCount)].map((page, i) => (\r\n            <PaginationItem active={i === currentPage} key={i}>\r\n            <PaginationLink onClick={e => handlePageClick(e, i)} href=\"#\">\r\n                {i + 1}\r\n            </PaginationLink>\r\n            </PaginationItem>\r\n        ))}\r\n        <PaginationItem disabled={currentPage >= pagesCount - 1}>\r\n          <PaginationLink onClick={handleNextClick} next href=\"#\" />\r\n        </PaginationItem>\r\n      </Pagination>\r\n  )\r\n}\r\n\r\nPaginacao.propTypes = {\r\n  pagesCount: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  handlePageClick: PropTypes.func.isRequired,\r\n  handlePreviousClick: PropTypes.func.isRequired,\r\n  handleNextClick: PropTypes.func.isRequired\r\n };\r\n\r\nexport default Paginacao;\r\n","import React, {Component} from 'react';\r\nimport {Col, Row, Modal, ModalHeader, ModalBody, ModalFooter, Table, Form, FormGroup, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Button } from 'reactstrap';\r\nimport Paginacao from './Paginacao';\r\nimport Api from '../services/api'\r\nimport * as toast from '../utils/toasts'\r\n\r\nclass TabelaDoacoes extends Component {\r\n  \r\n  \r\n  state = {\r\n    currentPage : 0,\r\n    selected : {volume : '', tipo_solo : {tipo: 'Tipo do solo', id : 0}, status_solo : {status: 'Status do solo', id : 0}},\r\n    dropdownOpenTipo : false,\r\n    dropdownOpenStatus : false,\r\n    showModalEdit: false,\r\n    status : [{id : 1, status : 'DOAÇÃO - DISPONÍVEL'},{id : 3, status : 'DOAÇÃO - CONCLUÍDA'}]\r\n  }\r\n\r\n  componentWillReceiveProps() {\r\n    this.setState({solos : this.props.solos})\r\n  }\r\n  \r\n   handlePageClick = (e, index) => {\r\n    e.preventDefault();\r\n    this.setState({currentPage: index});\r\n  };\r\n\r\n  handlePreviousClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({currentPage: this.state.currentPage - 1});\r\n  }\r\n\r\n  handleNextClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({currentPage: this.state.currentPage + 1});\r\n  }\r\n\r\n  toggleEdit = () => this.setState({showModalEdit: !this.state.showModalEdit})\r\n\r\n  toggleTipo = () => this.setState({dropdownOpenTipo : !this.state.dropdownOpenTipo})\r\n\r\n  toggleStatus = () => this.setState({dropdownOpenStatus : !this.state.dropdownOpenStatus})\r\n\r\n  changeVolume = (e) => this.setState({selected: {...this.state.selected, volume : e.target.value}})\r\n\r\n  changeTipo = (e) => this.setState({\r\n    selected : {...this.state.selected,\r\n      tipo_solo : {\r\n          tipo : e.target.textContent,\r\n          id : e.target.value\r\n        }\r\n      }  \r\n    })\r\n    \r\n  changeStatus = (e) => this.setState({\r\n    selected : {...this.state.selected,\r\n      status_solo : {\r\n          status : e.target.textContent,\r\n          id : e.target.value\r\n        }\r\n      }  \r\n    })\r\n\r\n  updateSolo = () => {\r\n    const { id, volume } = this.state.selected;\r\n    const tipoSoloId = this.state.selected.tipo_solo.id\r\n    const statusSoloId = this.state.selected.status_solo.id\r\n    if (volume !== '') {\r\n      if (tipoSoloId !== 0 ) {\r\n          if (statusSoloId !== 0) {\r\n              Api.put(`solo/${id}`, {volume, tipoSoloId, statusSoloId}).then( () => {\r\n                const solos = this.props.solos.filter(p => this.state.selected.id !== p.id)\r\n                this.setState({solos : [this.state.selected].concat(solos)})\r\n                this.props.change([this.state.selected].concat(solos));\r\n                toast.sucesso(\"Doação atualizada com sucesso\")\r\n              }).catch( () => {\r\n                  toast.erro(\"Erro ao atualizar a doação\")\r\n              })\r\n          }else {\r\n              toast.erro(\"Informe o status da doação\")\r\n          }\r\n      }else {\r\n          toast.erro(\"Informe o tipo do solo\")\r\n      }\r\n    }else {\r\n        toast.erro(\"Informe o volume de solo da doação\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Table striped bordered dark hover hidden={this.props.hidden}>\r\n            <thead>\r\n                <tr>\r\n                  <th>Volume</th>\r\n                  <th>Tipo</th>\r\n                  <th>Status</th>\r\n                  <th>Ação</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.props.solos\r\n              .slice(this.state.currentPage * 10, (this.state.currentPage + 1) * 10)\r\n              .map(solo => {\r\n                return (\r\n                  <React.Fragment key={solo.id}>\r\n                    <tr>\r\n                      <td>{solo.volume} m³</td>\r\n                      <td>{solo.tipo_solo.tipo}</td>\r\n                      <td>{solo.status_solo.status}</td>\r\n                      <td>\r\n                        <Button onClick={() => {this.setState({selected : solo}); this.toggleEdit()}}>Editar</Button>                    </td>\r\n                    </tr>\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </tbody>\r\n        </Table>\r\n        <Paginacao hidden={this.props.hidden}\r\n          pagesCount={Math.round((this.props.solos.length / 10) + 0.5)}\r\n          currentPage={this.state.currentPage}\r\n          handlePageClick={this.handlePageClick}\r\n          handlePreviousClick={this.handlePreviousClick}\r\n          handleNextClick={this.handleNextClick}\r\n        />\r\n        <Modal isOpen={this.state.showModalEdit} toggle={this.toggleEdit}>\r\n            <ModalHeader toggle={this.toggleEdit}>Editar doação</ModalHeader>\r\n            <ModalBody>\r\n              <Form>\r\n                  <FormGroup>\r\n                    <Row form>\r\n                        <Col>\r\n                            <Label for=\"volume\">Volume (m³)</Label>\r\n                            <Input value={this.state.selected.volume} type='number' id=\"volume\" onChange={this.changeVolume}/>\r\n                        </Col>\r\n                        <Col>\r\n                            <ButtonDropdown isOpen={this.state.dropdownOpenTipo} toggle={this.toggleTipo}  className=\"pt-4\">\r\n                                <DropdownToggle caret>\r\n                                    {this.state.selected.tipo_solo.tipo}\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    {this.props.tipos.map(tipo => {\r\n                                        return(\r\n                                            <DropdownItem key={tipo.id} disabled={tipo.id === 0 ? true : false} onClick={this.changeTipo} value={tipo.id}>{tipo.tipo}</DropdownItem>\r\n                                        )\r\n                                    })}\r\n                                </DropdownMenu>\r\n                            </ButtonDropdown>\r\n                        </Col>\r\n                    </Row>\r\n                      <Row form>\r\n                        <Col>\r\n                            <ButtonDropdown isOpen={this.state.dropdownOpenStatus} toggle={this.toggleStatus}  className=\"pt-4\">\r\n                                <DropdownToggle caret>\r\n                                    {this.state.selected.status_solo.status}\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    {this.state.status.map(status => {\r\n                                        return(\r\n                                            <DropdownItem key={status.id} disabled={status.id === 0 ? true : false} onClick={this.changeStatus} value={status.id}>{status.status}</DropdownItem>\r\n                                        )\r\n                                    })}\r\n                                </DropdownMenu>\r\n                            </ButtonDropdown>\r\n                        </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                </Form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" onClick={() => {this.updateSolo(); this.toggleEdit()}}>Salvar</Button>\r\n                <Button className='ml-3' color=\"secondary\" onClick={this.toggleEdit}>Cancelar</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TabelaDoacoes;\r\n","import React, {Component} from 'react';\r\nimport {  Col, Label, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Container, Badge, Card, CardBody, CardTitle, InputGroup, Input, InputGroupAddon, Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Row } from 'reactstrap';\r\nimport TabelaDoacoes from '../components/TabelaDoacoes'\r\nimport * as toast from '../utils/toasts'\r\nimport Api from '../services/api'\r\n\r\nclass Doacao extends Component {\r\n\r\n    state = {\r\n        doacoes : [],\r\n        new : {id : 0, volume : '', latitude : '', longitude : '', tipo_solo : {tipo: 'Tipo do solo', id : 0}, status_solo : {status : 'DOAÇÃO - DISPONÍVEL', id : 1}},\r\n        tipos : [],\r\n        hidden : false,\r\n        volume : '',\r\n        dropdownOpen : false,\r\n        dropdownOpenNew : false,\r\n        labelTipo : {tipo : 'Tipo de solo', id : 0},\r\n        showModal: false,\r\n        modalAdd : {       \r\n            selectedFile: null,\r\n            soloId : 0\r\n        },\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLoc()\r\n        Api.post('solos-doacao-data-params').then(solos => {\r\n            this.setState({\r\n                doacoes : solos.data\r\n            })\r\n        })\r\n        Api.get('solo-tipos').then(tipos => {\r\n            this.setState({\r\n                tipos : tipos.data.tipoSolos\r\n            })\r\n        })\r\n    }\r\n\r\n    hiddenTabela = () => this.setState({hidden : !this.state.hidden})\r\n\r\n    toggleTipo = () => this.setState({dropdownOpen : !this.state.dropdownOpen})\r\n\r\n    toggleTipoNew = () => this.setState({dropdownOpenNew : !this.state.dropdownOpenNew})\r\n\r\n    setDoacoes(doacoes) {\r\n        this.setState({doacoes : doacoes})\r\n    }\r\n    \r\n    changeTipo = (e) => {\r\n        this.setState({\r\n            labelTipo : {\r\n                tipo : e.target.textContent,\r\n                id : e.target.value\r\n            }  \r\n        })\r\n    }\r\n    \r\n    changeTipoNew = (e) => this.setState({\r\n        new : {...this.state.new,\r\n          tipo_solo : {\r\n              tipo : e.target.textContent,\r\n              id : e.target.value\r\n            }\r\n          }  \r\n        })\r\n\r\n    changeVolume = (e) => this.setState({volume : e.target.value})\r\n\r\n    changeVolumeNew = (e) => this.setState({new: {...this.state.new, volume : e.target.value}})\r\n\r\n    changeLatLong = (lat, long) => this.setState({new: {...this.state.new, latitude : lat, longitude : long}})\r\n    \r\n    toggle = () => this.setState({showModal: !this.state.showModal})\r\n\r\n    cleanFilters = () => {\r\n        this.setState({\r\n            labelTipo : {tipo : 'Tipo de solo', id : 0},\r\n            volume : '',\r\n        })\r\n    }\r\n\r\n    buscarDoacao = async () => {\r\n        const {volume} = this.state\r\n        const tipoId = this.state.labelTipo.id\r\n        await Api.post('solos-doacao-data-params/', {volume,tipoId}).then( response => {\r\n            this.setState({doacoes : response.data})\r\n            if (this.state.doacoes.length <= 0){\r\n                toast.info(\"Nenhuma doação encontrada com os filtros informados\")\r\n            }\r\n        })\r\n        if (this.state.doacoes.length !== 0 && this.state.hidden) {\r\n            this.hiddenTabela()\r\n        }else if (this.state.doacoes.length === 0 && this.state.hidden === false){\r\n            this.hiddenTabela()\r\n        }\r\n    }\r\n\r\n    saveSolo = async () => {\r\n        const { volume, latitude, longitude } = this.state.new;\r\n        let { modalAdd } = this.state;\r\n        const tipoSoloId = this.state.new.tipo_solo.id\r\n        if(!!latitude && !!longitude){\r\n            if(volume !== '') {\r\n                if (tipoSoloId !== 0) {\r\n                    if (modalAdd.selectedFile !== null) {\r\n                        await Api.post(\"solo/\", {volume, tipoSoloId, latitude, longitude, statusSoloId : 1}).then(response => {\r\n                            this.setState({new : {\r\n                                ...this.state.new,\r\n                                id: response.data.id\r\n                            }})\r\n                            this.setState({modalAdd : {\r\n                                ...this.state.modalAdd,\r\n                                soloId: response.data.id\r\n                            }})\r\n                            this.setState({doacoes : [this.state.new].concat(this.state.doacoes)})\r\n                            if (this.state.doacoes.length !== 0 && this.state.hidden) {\r\n                                this.hiddenTabela()\r\n                            }else if (this.state.doacoes.length === 0 && this.state.hidden === false){\r\n                                this.hiddenTabela()\r\n                            }\r\n                            this.saveFile();\r\n                            toast.sucesso(\"Doação cadastrada com sucesso\")\r\n                            this.toggle();\r\n                        }).catch( () => {\r\n                            toast.erro(\"Erro ao cadastrar a doação\")\r\n                        })\r\n                    }else {\r\n                        toast.erro(\"O PDF do laudo STP é obrigatório!\")\r\n                    }\r\n                }else {\r\n                    toast.erro(\"Informe o tipo do solo\")\r\n                }\r\n            }else {\r\n                toast.erro(\"Informe o volume de solo da doação\")\r\n            }\r\n        }else{\r\n            toast.info(\"Por favor, permita o acesso a sua localização para poder cadastrar novas doações no SDSE.\")\r\n\r\n        }\r\n    }\r\n\r\n    saveFile () {\r\n\r\n        let { modalAdd } = this.state;\r\n\r\n        let url = `/file-solo`;\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', modalAdd.selectedFile);\r\n        formData.append('soloId', modalAdd.soloId);\r\n\r\n        Api({\r\n          method: 'post',\r\n          url,\r\n          data: formData,\r\n          headers: { 'Content-Type': 'multipart/form-data' }\r\n        })\r\n        .then((response) => {\r\n            toast.sucesso(\"Relatório PDF cadastrado com sucesso\")\r\n\r\n            let modalAdd = {\r\n              selectedFile: null\r\n            };\r\n\r\n            this.setState({ modalAdd });\r\n        })\r\n        .catch((response) => {\r\n          console.log(response);\r\n        });\r\n    }\r\n\r\n    getLoc() {\r\n        var latitude = ''\r\n        var longitude = ''\r\n        navigator.permissions.query({name:'geolocation'}).then(result => {\r\n            if (result.state === 'granted' || result.state === 'prompt') {\r\n                var startPos\r\n                var geoSuccess = async (position) => {\r\n                  if (position.coords.latitude != null){\r\n                      startPos = position;\r\n                      latitude = startPos.coords.latitude\r\n                      longitude = startPos.coords.longitude\r\n                      localStorage.setItem('@user-loc', JSON.stringify({lat : startPos.coords.latitude, lng : startPos.coords.longitude}));\r\n                      this.changeLatLong(latitude, longitude)\r\n                  }else{\r\n                      localStorage.setItem('@user-loc',{});\r\n                  }\r\n                };\r\n                navigator.geolocation.getCurrentPosition(geoSuccess);\r\n            } else if (result.state === 'denied') {\r\n                toast.info(\"Por favor, permita o acesso a sua localização para poder cadastrar novas doações no SDSE.\")\r\n            }\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Container className=\"main\">\r\n                <h1 align=\"center\" className='mb-5'><Badge>SDSE</Badge></h1>\r\n                <Card className=\"p-3 mt-3\">\r\n                    <CardTitle><h3>Minhas doações\r\n                    <Button className='ml-5 bg-success' onClick={() => this.toggle()}>Cadastrar nova doação</Button></h3>\r\n                    </CardTitle>\r\n                    <CardBody>\r\n                    <Row className=\"pb-3\">\r\n                        <InputGroup>\r\n                            <Input className='rounded-left' placeholder='Volume (m³)' type='number' value={this.state.volume} onChange={this.changeVolume}/>\r\n                            <InputGroupAddon addonType=\"append\"><Button className='rounded-right' onClick={this.buscarDoacao}>Buscar</Button></InputGroupAddon>\r\n                            <ButtonDropdown className='ml-3' isOpen={this.state.dropdownOpen} toggle={this.toggleTipo}>\r\n                                <DropdownToggle caret>\r\n                                    {this.state.labelTipo.tipo}\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    {this.state.tipos.map(tipo => {\r\n                                        return(\r\n                                            <DropdownItem key={tipo.id} disabled={tipo.id === 0 ? true : false} onClick={this.changeTipo} value={tipo.id}>{tipo.tipo}</DropdownItem>\r\n                                        )\r\n                                    })}\r\n                                </DropdownMenu>\r\n                            </ButtonDropdown>\r\n                            <Button className='ml-3' outline onClick={this.cleanFilters}>Limpar filtros</Button>\r\n                        </InputGroup>\r\n                    </Row>\r\n                    </CardBody>\r\n                    <TabelaDoacoes change={this.setDoacoes.bind(this)} solos={this.state.doacoes} tipos={this.state.tipos} hidden={this.state.hidden}/>\r\n                </Card>\r\n                <Modal isOpen={this.state.showModal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>Cadastrar doação</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Row form>\r\n                                <Col>\r\n                                    <Label for=\"volume\">Volume (m³)</Label>\r\n                                    <Input value={this.state.new.volume} type='number' id=\"volume\" onChange={this.changeVolumeNew}/>\r\n                                </Col>\r\n                                <Col>\r\n                                    <ButtonDropdown isOpen={this.state.dropdownOpenNew} toggle={this.toggleTipoNew}  className=\"pt-4\">\r\n                                        <DropdownToggle caret>\r\n                                            {this.state.new.tipo_solo.tipo}\r\n                                        </DropdownToggle>\r\n                                        <DropdownMenu>\r\n                                            {this.state.tipos.map(tipo => {\r\n                                                return(\r\n                                                    <DropdownItem key={tipo.id} disabled={tipo.id === 0 ? true : false} onClick={this.changeTipoNew} value={tipo.id}>{tipo.tipo}</DropdownItem>\r\n                                                )\r\n                                            })}\r\n                                        </DropdownMenu>\r\n                                    </ButtonDropdown>\r\n                                </Col>\r\n                                <div className=\"mt-3\">\r\n                                    <label>Laudo de caracterização do solo</label>\r\n                                    <input type=\"file\" onChange={(e) => {\r\n                                    let modalAdd = this.state.modalAdd;\r\n                                    modalAdd.selectedFile = e.target.files[0];\r\n                                    this.setState({ modalAdd });\r\n                                    }} name=\"file\" required />\r\n                                </div>    \r\n                            </Row>\r\n                        </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.saveSolo}>Salvar</Button>\r\n                        <Button className='ml-3' color=\"secondary\" onClick={this.toggle}>Cancelar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default Doacao;\r\n","import React, { Component } from 'react';\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: (process.env.MAP_API)\r\n})(class Mapa extends Component {\r\n\r\n    constructor (props){\r\n        super(props)\r\n        this.state = {\r\n            selectedPlace : {\r\n                lat:0, lng: 0\r\n            },\r\n            selected : false\r\n        }\r\n      };\r\n\r\n      componentDidMount () {\r\n        this.setState({selected : false})\r\n      }\r\n\r\n      open(place, selected) {\r\n        if(place.id !== 0 && selected){\r\n           window.location.href = ``;\r\n        }\r\n      }\r\n\r\n  render() {\r\n    return (\r\n        <Map google={this.props.google} zoom={14} initialCenter={{lat : this.props.place.latitude, lng : this.props.place.longitude}} >\r\n            <Marker\r\n            position={{\r\n                lat: this.props.place.latitude,\r\n                lng: this.props.place.longitude\r\n            }} onClick={() => {\r\n              this.setState({selected : true,\r\n                selectedPlace : this.props.place})\r\n            }}>\r\n            </Marker>\r\n        </Map>\r\n    );\r\n  }\r\n})\r\n","import React, {Component} from 'react';\r\nimport { ListGroup, ListGroupItem, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button, Label, Row, InputGroup, Input, InputGroupAddon } from 'reactstrap';\r\nimport Paginacao from './Paginacao';\r\nimport Mapa from './Mapa';\r\nclass TabelaSolicitacoes extends Component {\r\n  \r\n  state = {\r\n    currentPage : 0,\r\n    volume: '',\r\n    selected : {volume : '', \r\n      tipo_solo : {tipo: 'Tipo do solo', id : 0}, \r\n      status_solo : {status: 'Status do solo', id : 0},\r\n      empresa_user : {nome : '', telefone : '', cnpj : '', email: '', representante: ''},\r\n      file : {url : ''}\r\n    },\r\n    showModal: false,\r\n    places : []\r\n  }\r\n\r\n  changeVolume = (e) => this.setState({volume : e.target.value})\r\n\r\n  componentWillReceiveProps() {\r\n    this.setState({solos : this.props.solos})\r\n  }\r\n  \r\n   handlePageClick = (e, index) => {\r\n    e.preventDefault();\r\n    this.setState({currentPage: index});\r\n  };\r\n\r\n  handlePreviousClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({currentPage: this.state.currentPage - 1});\r\n  }\r\n\r\n  handleNextClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({currentPage: this.state.currentPage + 1});\r\n  }\r\n\r\n  toggle = () => this.setState({showModal: !this.state.showModal})\r\n\r\n  interesse = () => {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Table striped bordered dark hover hidden={this.props.hidden}>\r\n            <thead>\r\n                <tr>\r\n                  <th>Volume</th>\r\n                  <th>Tipo</th>\r\n                  <th>Informações</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.props.solos\r\n              .slice(this.state.currentPage * 10, (this.state.currentPage + 1) * 10)\r\n              .map(solo => {\r\n                return (\r\n                  <React.Fragment key={solo.id}>\r\n                    <tr>\r\n                      <td>{solo.volume} m³</td>\r\n                      <td>{solo.tipo_solo.tipo}</td>\r\n                      <td>\r\n                        <Button onClick={() => {this.setState({selected : solo}); this.toggle()}}>Mais +</Button></td>\r\n                    </tr>\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </tbody>\r\n        </Table>\r\n        <Paginacao hidden={this.props.hidden}\r\n          pagesCount={Math.round((this.props.solos.length / 10) + 0.5)}\r\n          currentPage={this.state.currentPage}\r\n          handlePageClick={this.handlePageClick}\r\n          handlePreviousClick={this.handlePreviousClick}\r\n          handleNextClick={this.handleNextClick}\r\n        />\r\n        <Modal isOpen={this.state.showModal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Informações sobre a doação</ModalHeader>\r\n          <ModalBody>\r\n          <ListGroup>\r\n            <ListGroupItem>Empresa: {this.state.selected.empresa_user.nome}</ListGroupItem>\r\n            <ListGroupItem>Telefone: {this.state.selected.empresa_user.telefone}</ListGroupItem>\r\n            <ListGroupItem>CNPJ: {this.state.selected.empresa_user.cnpj}</ListGroupItem>\r\n            <ListGroupItem>E-mail: {this.state.selected.empresa_user.email}</ListGroupItem>\r\n            <ListGroupItem>Representante: {this.state.selected.empresa_user.representante}</ListGroupItem>\r\n          </ListGroup>\r\n          <a className=\"button-pdf\" href={this.state.selected.file.url} download=\"laudoSTP\">Baixar laudo de caractarização do solo<i class=\"fa fa-file-pdf-o\"></i></a>\r\n          <Row className=\"ml-5 mr-5\">\r\n            <Label>Tem interese?</Label><br/>\r\n              <InputGroup>\r\n                  <Input className='rounded-left' placeholder='Volume (m³)' type='number' value={this.state.volume} onChange={this.changeVolume}/>\r\n                  <InputGroupAddon addonType=\"append\"><Button className='rounded-right' onClick={this.interesse}>Sim!</Button></InputGroupAddon>\r\n              </InputGroup>\r\n          </Row>\r\n          <div className='mapa'>\r\n            <Mapa place={this.state.selected}/>\r\n          </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TabelaSolicitacoes;\r\n","import React, {Component} from 'react';\r\nimport {  Container, Badge, Card, CardBody, CardTitle, InputGroup, Input, InputGroupAddon, Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Row } from 'reactstrap';\r\nimport TabelaDoacoesDisponiveis from '../components/TabelaDoacoesDisponiveis'\r\nimport * as toast from '../utils/toasts'\r\nimport Api from '../services/api'\r\n\r\nclass DoacoesDisponiveis extends Component {\r\n\r\n    state = {\r\n        doacoes : [],\r\n        tipos : [],\r\n        hidden : false,\r\n        volume : '',\r\n        dropdownOpen : false,\r\n        labelTipo : {tipo : 'Tipo de solo', id : 0},\r\n    }\r\n\r\n    componentDidMount() {\r\n        Api.post('/solos-doacao-disp-data-params').then(solos => {\r\n            this.setState({\r\n                doacoes : solos.data\r\n            })\r\n        })\r\n        Api.get('solo-tipos').then(tipos => {\r\n            this.setState({\r\n                tipos : tipos.data.tipoSolos\r\n            })\r\n        })\r\n    }\r\n\r\n    hiddenTabela = () => this.setState({hidden : !this.state.hidden})\r\n\r\n    toggleTipo = () => this.setState({dropdownOpen : !this.state.dropdownOpen})\r\n    \r\n    changeTipo = (e) => {\r\n        this.setState({\r\n            labelTipo : {\r\n                tipo : e.target.textContent,\r\n                id : e.target.value\r\n            }  \r\n        })\r\n    }\r\n\r\n    changeVolume = (e) => this.setState({volume : e.target.value})\r\n    \r\n    toggle = () => this.setState({showModal: !this.state.showModal})\r\n\r\n    cleanFilters = () => {\r\n        this.setState({\r\n            labelTipo : {tipo : 'Tipo de solo', id : 0},\r\n            volume : '',\r\n        })\r\n    }\r\n\r\n    buscarDoacao = async () => {\r\n        const {volume} = this.state\r\n        const tipoId = this.state.labelTipo.id\r\n        await Api.post('/solos-doacao-disp-data-params/', {volume,tipoId}).then( response => {\r\n            this.setState({doacoes : response.data})\r\n            if (this.state.doacoes.length <= 0){\r\n                toast.info(\"Nenhuma doação encontrada com os filtros informados\")\r\n            }\r\n        })\r\n        if (this.state.doacoes.length !== 0 && this.state.hidden) {\r\n            this.hiddenTabela()\r\n        }else if (this.state.doacoes.length === 0 && this.state.hidden === false){\r\n            this.hiddenTabela()\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Container className=\"main\">\r\n                <h1 align=\"center\" className='mb-5'><Badge>SDSE</Badge></h1>\r\n                <Card className=\"p-3 mt-3\">\r\n                    <CardTitle><h3>Doações disponíveis</h3>\r\n                    </CardTitle>\r\n                    <CardBody>\r\n                    <Row className=\"pb-3\">\r\n                        <InputGroup>\r\n                            <Input className='rounded-left' placeholder='Volume (Kg)' type='number' value={this.state.volume} onChange={this.changeVolume}/>\r\n                            <InputGroupAddon addonType=\"append\"><Button className='rounded-right' onClick={this.buscarDoacao}>Buscar</Button></InputGroupAddon>\r\n                            <ButtonDropdown className='ml-3' isOpen={this.state.dropdownOpen} toggle={this.toggleTipo}>\r\n                                <DropdownToggle caret>\r\n                                    {this.state.labelTipo.tipo}\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    {this.state.tipos.map(tipo => {\r\n                                        return(\r\n                                            <DropdownItem key={tipo.id} disabled={tipo.id === 0 ? true : false} onClick={this.changeTipo} value={tipo.id}>{tipo.tipo}</DropdownItem>\r\n                                        )\r\n                                    })}\r\n                                </DropdownMenu>\r\n                            </ButtonDropdown>\r\n                            <Button className='ml-3' outline onClick={this.cleanFilters}>Limpar filtros</Button>\r\n                        </InputGroup>\r\n                    </Row>\r\n                    </CardBody>\r\n                    <TabelaDoacoesDisponiveis solos={this.state.doacoes} hidden={this.state.hidden}/>\r\n                </Card>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default DoacoesDisponiveis;\r\n","import React, {Component} from 'react';\r\nimport {Col, Row, Modal, ModalHeader, ModalBody, ModalFooter, Table, Form, FormGroup, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Button } from 'reactstrap';\r\nimport Paginacao from './Paginacao';\r\nimport Api from '../services/api'\r\nimport * as toast from '../utils/toasts'\r\n\r\nclass TabelaSolicitacoes extends Component {\r\n  \r\n  \r\n  state = {\r\n    currentPage : 0,\r\n    selected : {volume : '', tipo_solo : {tipo: 'Tipo do solo', id : 0}, status_solo : {status: 'Status do solo', id : 0}},\r\n    dropdownOpenTipo : false,\r\n    dropdownOpenStatus : false,\r\n    showModalEdit: false,\r\n    status : [{id : 2, status : 'SOLICITAÇÃO - ABERTA'},{id : 4, status : 'SOLICITAÇÃO - ATENDIDA'}]\r\n  }\r\n\r\n  componentWillReceiveProps() {\r\n    this.setState({solos : this.props.solos})\r\n  }\r\n  \r\n   handlePageClick = (e, index) => {\r\n    e.preventDefault();\r\n    this.setState({currentPage: index});\r\n  };\r\n\r\n  handlePreviousClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({currentPage: this.state.currentPage - 1});\r\n  }\r\n\r\n  handleNextClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({currentPage: this.state.currentPage + 1});\r\n  }\r\n\r\n  toggleEdit = () => this.setState({showModalEdit: !this.state.showModalEdit})\r\n\r\n  toggleTipo = () => this.setState({dropdownOpenTipo : !this.state.dropdownOpenTipo})\r\n\r\n  toggleStatus = () => this.setState({dropdownOpenStatus : !this.state.dropdownOpenStatus})\r\n\r\n  changeVolume = (e) => this.setState({selected: {...this.state.selected, volume : e.target.value}})\r\n\r\n  changeTipo = (e) => this.setState({\r\n    selected : {...this.state.selected,\r\n      tipo_solo : {\r\n          tipo : e.target.textContent,\r\n          id : e.target.value\r\n        }\r\n      }  \r\n    })\r\n    \r\n  changeStatus = (e) => this.setState({\r\n    selected : {...this.state.selected,\r\n      status_solo : {\r\n          status : e.target.textContent,\r\n          id : e.target.value\r\n        }\r\n      }  \r\n    })\r\n\r\n  updateSolo = () => {\r\n    const { id, volume } = this.state.selected;\r\n    const tipoSoloId = this.state.selected.tipo_solo.id\r\n    const statusSoloId = this.state.selected.status_solo.id\r\n    if (volume !== '') {\r\n      if (tipoSoloId !== 0 ) {\r\n          if (statusSoloId !== 0) {\r\n              Api.put(`solo/${id}`, {volume, tipoSoloId, statusSoloId}).then( () => {\r\n                const solos = this.props.solos.filter(p => this.state.selected.id !== p.id)\r\n                this.setState({solos : [this.state.selected].concat(solos)})\r\n                this.props.change([this.state.selected].concat(solos));\r\n                toast.sucesso(\"Solicitação atualizada com sucesso\")\r\n              }).catch( () => {\r\n                  toast.erro(\"Erro ao atualizar a solicitação\")\r\n              })\r\n          }else {\r\n              toast.erro(\"Informe o status da solicitação\")\r\n          }\r\n      }else {\r\n          toast.erro(\"Informe o tipo do solo\")\r\n      }\r\n    }else {\r\n        toast.erro(\"Informe o volume de solo da solicitação\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Table striped bordered dark hover hidden={this.props.hidden}>\r\n            <thead>\r\n                <tr>\r\n                  <th>Volume</th>\r\n                  <th>Tipo</th>\r\n                  <th>Status</th>\r\n                  <th>Ação</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.props.solos\r\n              .slice(this.state.currentPage * 10, (this.state.currentPage + 1) * 10)\r\n              .map(solo => {\r\n                return (\r\n                  <React.Fragment key={solo.id}>\r\n                    <tr>\r\n                      <td>{solo.volume} m³</td>\r\n                      <td>{solo.tipo_solo.tipo}</td>\r\n                      <td>{solo.status_solo.status}</td>\r\n                      <td>\r\n                        <Button onClick={() => {this.setState({selected : solo}); this.toggleEdit()}}>Editar</Button>                    </td>\r\n                    </tr>\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </tbody>\r\n        </Table>\r\n        <Paginacao hidden={this.props.hidden}\r\n          pagesCount={Math.round((this.props.solos.length / 10) + 0.5)}\r\n          currentPage={this.state.currentPage}\r\n          handlePageClick={this.handlePageClick}\r\n          handlePreviousClick={this.handlePreviousClick}\r\n          handleNextClick={this.handleNextClick}\r\n        />\r\n        <Modal isOpen={this.state.showModalEdit} toggle={this.toggleEdit}>\r\n            <ModalHeader toggle={this.toggleEdit}>Editar solicitação</ModalHeader>\r\n            <ModalBody>\r\n              <Form>\r\n                  <FormGroup>\r\n                    <Row form>\r\n                        <Col>\r\n                            <Label for=\"volume\">Volume (m³)</Label>\r\n                            <Input value={this.state.selected.volume} type='number' id=\"volume\" onChange={this.changeVolume}/>\r\n                        </Col>\r\n                        <Col>\r\n                            <ButtonDropdown isOpen={this.state.dropdownOpenTipo} toggle={this.toggleTipo}  className=\"pt-4\">\r\n                                <DropdownToggle caret>\r\n                                    {this.state.selected.tipo_solo.tipo}\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    {this.props.tipos.map(tipo => {\r\n                                        return(\r\n                                            <DropdownItem key={tipo.id} disabled={tipo.id === 0 ? true : false} onClick={this.changeTipo} value={tipo.id}>{tipo.tipo}</DropdownItem>\r\n                                        )\r\n                                    })}\r\n                                </DropdownMenu>\r\n                            </ButtonDropdown>\r\n                        </Col>\r\n                    </Row>\r\n                      <Row form>\r\n                        <Col>\r\n                            <ButtonDropdown isOpen={this.state.dropdownOpenStatus} toggle={this.toggleStatus}  className=\"pt-4\">\r\n                                <DropdownToggle caret>\r\n                                    {this.state.selected.status_solo.status}\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    {this.state.status.map(status => {\r\n                                        return(\r\n                                            <DropdownItem key={status.id} disabled={status.id === 0 ? true : false} onClick={this.changeStatus} value={status.id}>{status.status}</DropdownItem>\r\n                                        )\r\n                                    })}\r\n                                </DropdownMenu>\r\n                            </ButtonDropdown>\r\n                        </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                </Form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" onClick={() => {this.updateSolo(); this.toggleEdit()}}>Salvar</Button>\r\n                <Button className='ml-3' color=\"secondary\" onClick={this.toggleEdit}>Cancelar</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TabelaSolicitacoes;\r\n","import Login from './pages/Login';\r\nimport Inicio from './pages/Inicio';\r\nimport RedefSenha from './pages/Redef-senha';\r\nimport RecuSenha from './pages/Recu-senha';\r\nimport PrimeiroAcesso from './pages/Primeiro-acesso';\r\nimport PrimeiraSenha from './pages/Primeira-senha';\r\nimport Doacoes from './pages/Doacoes';\r\nimport DoacoesDisponiveis from './pages/DoacoesDisponiveis';\r\nimport Solicitacao from './pages/Solicitacao';\r\nimport EdicaoDados from './pages/EdicaoDados';\r\n\r\nvar routes = [\r\n    {\r\n        path: \"/login\",\r\n        name: \"Login\",\r\n        component: Login\r\n    },\r\n    {\r\n        path: \"/inicio\",\r\n        name: \"Inicio\",\r\n        isAuth: true,\r\n        component: Inicio\r\n    },\r\n    {\r\n        path: \"/redef_senha/:token\",\r\n        name: \"RedefSenha\",\r\n        component: RedefSenha\r\n    },\r\n    {\r\n        path: \"/cadastro_senha/:token\",\r\n        name: \"PrimeiraSenha\",\r\n        component: PrimeiraSenha\r\n\r\n    },\r\n    {\r\n        path: \"/recupera_senha\",\r\n        name: \"RecuperaSenha\",\r\n        component: RecuSenha\r\n    },\r\n    {\r\n        path: \"/primeiro_acesso\",\r\n        name: \"PrimeiroAcesso\",\r\n        component: PrimeiroAcesso\r\n    },\r\n    {\r\n        path: \"/doacoes\",\r\n        name: \"Doacoes\",\r\n        isAuth: true,\r\n        component: Doacoes\r\n    },\r\n    {\r\n        path: \"/solicitacao\",\r\n        name: \"Solicitacao\",\r\n        isAuth: true,\r\n        component: Solicitacao\r\n    },\r\n    {\r\n        path: \"/doacoes-disponiveis\",\r\n        name: \"DoacoesDisponiveis\",\r\n        isAuth: true,\r\n        component: DoacoesDisponiveis\r\n    },\r\n    {\r\n        path: \"/edicao-dados\",\r\n        name: \"EdicaoDados\",\r\n        isAuth: true,\r\n        component: EdicaoDados\r\n    }\r\n];\r\nexport default routes;","import React, {Component} from 'react';\r\nimport {  Col, Label, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Container, Badge, Card, CardBody, CardTitle, InputGroup, Input, InputGroupAddon, Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Row } from 'reactstrap';\r\nimport TabelaSolicitacoes from '../components/TabelaSolicitacoes'\r\nimport * as toast from '../utils/toasts'\r\nimport Api from '../services/api'\r\n\r\nclass Solicitacao extends Component {\r\n\r\n    state = {\r\n        solicitacoes : [],\r\n        new : {id: 0, volume : '', tipo_solo : {tipo: 'Tipo do solo', id : 0}, status_solo : {status : 'SOLICITAÇÃO - ABERTA', id : 2}},\r\n        tipos : [],\r\n        hidden : false,\r\n        volume : '',\r\n        dropdownOpen : false,\r\n        dropdownOpenNew : false,\r\n        labelTipo : {tipo : 'Tipo de solo', id : 0},\r\n        showModal: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        Api.post('solos-solicitacao-data-params').then(solos => {\r\n            this.setState({\r\n                solicitacoes : solos.data\r\n            })\r\n        })\r\n        Api.get('solo-tipos').then(tipos => {\r\n            this.setState({\r\n                tipos : tipos.data.tipoSolos\r\n            })\r\n        })\r\n    }\r\n\r\n    hiddenTabela = () => this.setState({hidden : !this.state.hidden})\r\n\r\n    toggleTipo = () => this.setState({dropdownOpen : !this.state.dropdownOpen})\r\n\r\n    toggleTipoNew = () => this.setState({dropdownOpenNew : !this.state.dropdownOpenNew})\r\n\r\n    setSolicitacoes(solicitacoes) {\r\n        this.setState({solicitacoes : solicitacoes})\r\n    }\r\n    \r\n    changeTipo = (e) => {\r\n        this.setState({\r\n            labelTipo : {\r\n                tipo : e.target.textContent,\r\n                id : e.target.value\r\n            }  \r\n        })\r\n    }\r\n    \r\n    changeTipoNew = (e) => this.setState({\r\n        new : {...this.state.new,\r\n          tipo_solo : {\r\n              tipo : e.target.textContent,\r\n              id : e.target.value\r\n            }\r\n          }  \r\n        })\r\n\r\n    changeVolume = (e) => this.setState({volume : e.target.value})\r\n\r\n    changeVolumeNew = (e) => this.setState({new: {...this.state.new, volume : e.target.value}})\r\n    \r\n    toggle = () => this.setState({showModal: !this.state.showModal})\r\n\r\n    cleanFilters = () => {\r\n        this.setState({\r\n            labelTipo : {tipo : 'Tipo de solo', id : 0},\r\n            volume : '',\r\n        })\r\n    }\r\n\r\n    buscarSolicitacao = async () => {\r\n        const {volume} = this.state\r\n        const tipoId = this.state.labelTipo.id\r\n        await Api.post('solos-solicitacao-data-params/', {volume,tipoId}).then( response => {\r\n            this.setState({solicitacoes : response.data})\r\n            if (this.state.solicitacoes.length <= 0){\r\n                toast.info(\"Nenhuma solicitação encontrada com os filtros informados\")\r\n            }\r\n        })\r\n        if (this.state.solicitacoes.length !== 0 && this.state.hidden) {\r\n            this.hiddenTabela()\r\n        }else if (this.state.solicitacoes.length === 0 && this.state.hidden === false){\r\n            this.hiddenTabela()\r\n        }\r\n    }\r\n\r\n    saveSolo = async () => {\r\n        const { volume } = this.state.new;\r\n        const tipoSoloId = this.state.new.tipo_solo.id\r\n        if (volume !== '') {\r\n          if (tipoSoloId !== 0 ) {\r\n              await Api.post(\"solo/\", {volume, tipoSoloId, statusSoloId : 2}).then(response => {\r\n                  this.setState({new : {\r\n                      ...this.state.new,\r\n                      id: response.data.id\r\n                  }})\r\n                  this.setState({solicitacoes : [this.state.new].concat(this.state.solicitacoes)})\r\n                  if (this.state.solicitacoes.length !== 0 && this.state.hidden) {\r\n                      this.hiddenTabela()\r\n                  }else if (this.state.solicitacoes.length === 0 && this.state.hidden === false){\r\n                      this.hiddenTabela()\r\n                  }\r\n                  toast.sucesso(\"Solicitação cadastrada com sucesso\")\r\n              }).catch( () => {\r\n                  toast.erro(\"Erro ao cadastrar a solicitação\")\r\n              })\r\n          }else {\r\n              toast.erro(\"Informe o tipo do solo\")\r\n          }\r\n        }else {\r\n            toast.erro(\"Informe o volume de solo da solicitação\")\r\n        }\r\n      }\r\n\r\n    render () {\r\n        return (\r\n            <Container className=\"main\">\r\n                <h1 align=\"center\" className='mb-5'><Badge>SDSE</Badge></h1>\r\n                <Card className=\"p-3 mt-3\">\r\n                    <CardTitle><h3>Minhas solicitações\r\n                    <Button className='ml-3 bg-success' onClick={() => this.toggle()}>Cadastrar solicitação</Button></h3>\r\n                    </CardTitle>\r\n                    <CardBody>\r\n                    <Row className=\"pb-3\">\r\n                        <InputGroup>\r\n                            <Input className='rounded-left' placeholder='Volume (m³)' type='number' value={this.state.volume} onChange={this.changeVolume}/>\r\n                            <InputGroupAddon addonType=\"append\"><Button className='rounded-right' onClick={this.buscarSolicitacao}>Buscar</Button></InputGroupAddon>\r\n                            <ButtonDropdown className='ml-3' isOpen={this.state.dropdownOpen} toggle={this.toggleTipo}>\r\n                                <DropdownToggle caret>\r\n                                    {this.state.labelTipo.tipo}\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    {this.state.tipos.map(tipo => {\r\n                                        return(\r\n                                            <DropdownItem key={tipo.id} disabled={tipo.id === 0 ? true : false} onClick={this.changeTipo} value={tipo.id}>{tipo.tipo}</DropdownItem>\r\n                                        )\r\n                                    })}\r\n                                </DropdownMenu>\r\n                            </ButtonDropdown>\r\n                            <Button className='ml-3' outline onClick={this.cleanFilters}>Limpar filtros</Button>\r\n                        </InputGroup>\r\n                    </Row>\r\n                    </CardBody>\r\n                    <TabelaSolicitacoes change={this.setSolicitacoes.bind(this)} solos={this.state.solicitacoes} tipos={this.state.tipos} hidden={this.state.hidden}/>\r\n                </Card>\r\n                <Modal isOpen={this.state.showModal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>Cadastrar solicitação</ModalHeader> \r\n                    <ModalBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Row form>\r\n                                <Col>\r\n                                    <Label for=\"volume\">Volume (m³)</Label>\r\n                                    <Input value={this.state.new.volume} type='number' id=\"volume\" onChange={this.changeVolumeNew}/>\r\n                                </Col>\r\n                                <Col>\r\n                                    <ButtonDropdown isOpen={this.state.dropdownOpenNew} toggle={this.toggleTipoNew}  className=\"pt-4\">\r\n                                        <DropdownToggle caret>\r\n                                            {this.state.new.tipo_solo.tipo}\r\n                                        </DropdownToggle>\r\n                                        <DropdownMenu>\r\n                                            {this.state.tipos.map(tipo => {\r\n                                                return(\r\n                                                    <DropdownItem key={tipo.id} disabled={tipo.id === 0 ? true : false} onClick={this.changeTipoNew} value={tipo.id}>{tipo.tipo}</DropdownItem>\r\n                                                )\r\n                                            })}\r\n                                        </DropdownMenu>\r\n                                    </ButtonDropdown>\r\n                                </Col>\r\n                            </Row>\r\n                        </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={() => {this.saveSolo(); this.toggle()}}>Salvar</Button>\r\n                        <Button className='ml-3' color=\"secondary\" onClick={this.toggle}>Cancelar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default Solicitacao;\r\n","import React, { Component } from 'react';\r\nimport '../styles.css';\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { getUser, setUser } from '../services/auth';\r\nimport { ReactstrapInput } from \"reactstrap-formik\";\r\nimport {Button, Container, Card, CardBody, Badge, CardTitle} from 'reactstrap';\r\nimport * as Yup from 'yup';\r\nimport MaskedInput from \"react-text-mask\";\r\nimport { cnpjMask, telefoneMask, cpfMask, cfdfMask } from \"../utils/Masks\";\r\nimport api from '../services/api';\r\nimport Footer from '../components/Footer/footer';\r\nimport * as toast from '../utils/toasts'\r\n\r\n\r\n\r\n  class EdicaoDados extends Component {\r\n    render() { \r\n      const { user } = getUser()\r\n      const { nome, cnpj, cfdf, email, telefone, representante, cargo_representante, cpf_representante} = user;\r\n    return (\r\n    <Container className=\"mt-5 mb-5 main\">\r\n      <h1 align=\"center\" className='mb-5'><Badge>SDSE</Badge></h1>\r\n        <Card>\r\n            <CardBody>\r\n              <CardTitle>Dados empresariais</CardTitle>\r\n        <Formik\r\n              initialValues={{nome, cnpj, cfdf, email, telefone, representante, cargo_representante, cpf_representante }}\r\n              validationSchema={Yup.object().shape({\r\n                nome: Yup.string().required('Campo Obrigatório!'),\r\n                cnpj: Yup.string().required('Campo Obrigatório!'),\r\n                cfdf: Yup.string().required('Campo Obrigatório!'),\r\n                email: Yup.string().required('Campo Obrigatório!').email('E-mail inválido!'),\r\n                telefone: Yup.string().required('Campo Obrigatório!'),\r\n                representante: Yup.string().required('Campo Obrigatório!'),\r\n                cargo_representante: Yup.string().required('Campo Obrigatório!'),\r\n                cpf_representante: Yup.string().required('Campo Obrigatório!'),\r\n              })}\r\n              onSubmit={async(values, { setSubmitting }) => {          \r\n                const nome = values.nome;       \r\n                const cnpj = values.cnpj;\r\n                const cfdf = values.cfdf;\r\n                const email = values.email;\r\n                const telefone = values.telefone;\r\n                const representante = values.representante;\r\n                const cargo_representante = values.cargo_representante;\r\n                const cpf_representante = values.cpf_representante;\r\n          \r\n                await api.put('empresa', {nome, cnpj, cfdf, email, telefone, representante, cargo_representante, cpf_representante}).then(response => {\r\n                  toast.sucesso(\"Dados atualizados com sucesso!\")\r\n                  setUser(response.data)\r\n                  this.props.history.push(\"/inicio\")\r\n                })\r\n                  .catch(error => {\r\n                    alert(error);\r\n                  });\r\n              } }\r\n              >\r\n              <Form>\r\n                  <Field name=\"nome\"  label=\"Nome\" type=\"text\" component={ReactstrapInput} />\r\n\r\n                  <Field name=\"telefone\"  label=\"Telefone\" type=\"text\"\r\n                  tag={MaskedInput} mask={telefoneMask} component={ReactstrapInput} />\r\n\r\n                  <Field name=\"email\"  label=\"Email\" type=\"text\" component={ReactstrapInput} />\r\n\r\n                  <Field name=\"cnpj\"  label=\"CNPJ\" type=\"text\" \r\n                  tag={MaskedInput} mask={cnpjMask} component={ReactstrapInput} />\r\n\r\n                  <Field name=\"cfdf\"  label=\"CFDF\" type=\"text\"\r\n                  tag={MaskedInput} mask={cfdfMask} component={ReactstrapInput} />\r\n\r\n                  <Field name=\"representante\"  label=\"Representante\" type=\"text\" component={ReactstrapInput} />\r\n\r\n                  <Field name=\"cargo_representante\"  label=\"Cargo do Representante\" type=\"text\" component={ReactstrapInput} />\r\n\r\n                  <Field name=\"cpf_representante\"  label=\"CPF do Representante\" type=\"text\"\r\n                  tag={MaskedInput} mask={cpfMask} component={ReactstrapInput} />\r\n\r\n                <Button type=\"submit\">Salvar</Button>\r\n                <Button className=\"ml-3\" type=\"reset\">Limpar</Button>\r\n\r\n              </Form>\r\n              </Formik>\r\n            </CardBody>\r\n        </Card>\r\n      <Footer />\r\n    </Container>\r\n  )\r\n    }}\r\n    export default EdicaoDados;\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom';\r\nimport routes from './routes';\r\nimport { isAuthenticated } from \"./services/auth\";\r\nimport './styles.css';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAuthenticated() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n          <Redirect to={{ \r\n            pathname: \"/login\", \r\n            state: { from: props.location } }}  \r\n          />\r\n        )\r\n    }\r\n  />\r\n);\r\n\r\nclass App extends Component {\r\n  \r\n  getRoutes = routes => {\r\n    return routes.map((prop, key) => {\r\n        if (!!prop.isAuth) {\r\n            return (<PrivateRoute\r\n              path={prop.path}\r\n              component={prop.component}\r\n              key={key}\r\n            />);\r\n        }\r\n\r\n        return (\r\n          <Route\r\n            path={prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          >\r\n          </Route>\r\n        );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n     <BrowserRouter>\r\n      <Switch>{this.getRoutes(routes)}\r\n        <Redirect exact={true} from=\"/\" to=\"/login\"/>\r\n      </Switch>\r\n     </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}